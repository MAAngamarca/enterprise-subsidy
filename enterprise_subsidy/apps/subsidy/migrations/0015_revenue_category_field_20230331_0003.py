# Generated by Django 3.2.18 on 2023-03-31 00:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('openedx_ledger', '0005_help_text_and_more_indices'),
        ('subsidy', '0014_blankable_ledger'),
    ]

    operations = [
        migrations.AddField(
            model_name='historicalsubsidy',
            name='revenue_category',
            field=models.CharField(choices=[('bulk-enrollment-prepay', 'bulk-enrollment-prepay'), ('partner-no-rev-prepay', 'partner-no-rev-prepay')], default='bulk-enrollment-prepay', help_text='Control how revenue is recognized for subsidized enrollments.  In spirit, this is equivalent to the "Cataloge Category" for Coupons.  This field is only used downstream analytics and does not change any business logic.', max_length=255),
        ),
        migrations.AddField(
            model_name='subsidy',
            name='revenue_category',
            field=models.CharField(choices=[('bulk-enrollment-prepay', 'bulk-enrollment-prepay'), ('partner-no-rev-prepay', 'partner-no-rev-prepay')], default='bulk-enrollment-prepay', help_text='Control how revenue is recognized for subsidized enrollments.  In spirit, this is equivalent to the "Cataloge Category" for Coupons.  This field is only used downstream analytics and does not change any business logic.', max_length=255),
        ),
        migrations.AlterField(
            model_name='historicalsubsidy',
            name='enterprise_customer_uuid',
            field=models.UUIDField(db_index=True, help_text='UUID of the enterprise customer assigned this Subsidy.'),
        ),
        migrations.AlterField(
            model_name='historicalsubsidy',
            name='internal_only',
            field=models.BooleanField(default=False, help_text='If set, this subsidy will not be customer facing, nor have any influence on enterprise customers.'),
        ),
        migrations.AlterField(
            model_name='historicalsubsidy',
            name='ledger',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='The one and only one Ledger uniquely associated with this Subsidy.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='openedx_ledger.ledger'),
        ),
        migrations.AlterField(
            model_name='historicalsubsidy',
            name='reference_id',
            field=models.CharField(blank=True, help_text='Identifier of the upstream Salesforce object that represents the deal that led to the creation of this Subsidy.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='historicalsubsidy',
            name='reference_type',
            field=models.CharField(choices=[('opportunity_product_id', 'Opportunity Product ID')], db_index=True, default='opportunity_product_id', help_text='The type of object identified by the <code>reference_id</code> field.  Likely to be a type of Salesforce object.', max_length=255),
        ),
        migrations.AlterField(
            model_name='historicalsubsidy',
            name='starting_balance',
            field=models.BigIntegerField(help_text='The positive balance this Subidy will be initially provisioned to start with.'),
        ),
        migrations.AlterField(
            model_name='historicalsubsidy',
            name='title',
            field=models.CharField(blank=True, help_text='A human-readable title decided by the staff that is provisioning this Subisdy for the customer.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='historicalsubsidy',
            name='unit',
            field=models.CharField(choices=[('usd_cents', 'U.S. Dollar (Cents)'), ('seats', 'Seats in a course')], db_index=True, default='usd_cents', help_text='Unit of currency used for all values of quantity for this Subsidy and associated transactions.', max_length=255),
        ),
        migrations.AlterField(
            model_name='subsidy',
            name='enterprise_customer_uuid',
            field=models.UUIDField(db_index=True, help_text='UUID of the enterprise customer assigned this Subsidy.'),
        ),
        migrations.AlterField(
            model_name='subsidy',
            name='internal_only',
            field=models.BooleanField(default=False, help_text='If set, this subsidy will not be customer facing, nor have any influence on enterprise customers.'),
        ),
        migrations.AlterField(
            model_name='subsidy',
            name='ledger',
            field=models.OneToOneField(blank=True, help_text='The one and only one Ledger uniquely associated with this Subsidy.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='openedx_ledger.ledger'),
        ),
        migrations.AlterField(
            model_name='subsidy',
            name='reference_id',
            field=models.CharField(blank=True, help_text='Identifier of the upstream Salesforce object that represents the deal that led to the creation of this Subsidy.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='subsidy',
            name='reference_type',
            field=models.CharField(choices=[('opportunity_product_id', 'Opportunity Product ID')], db_index=True, default='opportunity_product_id', help_text='The type of object identified by the <code>reference_id</code> field.  Likely to be a type of Salesforce object.', max_length=255),
        ),
        migrations.AlterField(
            model_name='subsidy',
            name='starting_balance',
            field=models.BigIntegerField(help_text='The positive balance this Subidy will be initially provisioned to start with.'),
        ),
        migrations.AlterField(
            model_name='subsidy',
            name='title',
            field=models.CharField(blank=True, help_text='A human-readable title decided by the staff that is provisioning this Subisdy for the customer.', max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='subsidy',
            name='unit',
            field=models.CharField(choices=[('usd_cents', 'U.S. Dollar (Cents)'), ('seats', 'Seats in a course')], db_index=True, default='usd_cents', help_text='Unit of currency used for all values of quantity for this Subsidy and associated transactions.', max_length=255),
        ),
        migrations.AddConstraint(
            model_name='subsidy',
            constraint=models.UniqueConstraint(condition=models.Q(('internal_only', False)), fields=('reference_id', 'reference_type'), name='unique_reference_id_non_internal'),
        ),
    ]
